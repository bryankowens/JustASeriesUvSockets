startup:
1) emit to client, asking for 
 
login:
will check with contenttype to find groups user has access too
1) 

will need a systemdata table to store system settings like:
default blocks to be loaded into system by anonymous user, with other blocks defined by the other users

{"funcname":"freshcopy","funcmenu":"adminMenu","displayname":"New Blob Post","linkname":"newblogpost","usergroup":"admin"}


typemeta:category, groupaccess, 
typestamps: [updated/created/retired],
typename: systemname, fullname, description,
typefields[fieldname/fieldtype/fielddata/cssblob]  -- select, multiselect, textfield, textarea, password, link, field data refers to length and filler options
typeform: staticblob (form format),

template > form fields for entry, fields added by the system, triggers,

typemeta: {category:"",groupaccess:[], comments[status:on]}
typestamps: []
typename: {systemname:"blog",fullname:"Blog Entry",description:"Official Blog entries"}
typefields{text, blogtitle oid, blogauthor  entry of array, blogname  text, blogshort  text, blogcontent  array, blogtags}
typeform{create-sql: insert into main_content columns() values();update-sql; destroy-sql}

content - individual copies of contenttypes
metadata: type_oid, user_oid


NEXT STEPS:
create blog entry form in html, create sql insert query, create edit query, delete query




